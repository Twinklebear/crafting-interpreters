[Token]: VAR var var l1
[Token]: IDENTIFIER x x l1
[Token]: EQUAL = l1
[Token]: NUMBER 0 0 l1
[Token]: SEMICOLON ; l1
[Token]: LEFT_BRACE { l2
[Token]: IDENTIFIER x x l3
[Token]: EQUAL = l3
[Token]: NUMBER 1 1 l3
[Token]: SEMICOLON ; l3
[Token]: RIGHT_BRACE } l4
[Token]: PRINT print print l5
[Token]: STRING "x should be 1: " x should be 1:  l5
[Token]: PLUS + l5
[Token]: IDENTIFIER x x l5
[Token]: SEMICOLON ; l5
[Token]: LEFT_BRACE { l7
[Token]: VAR var var l8
[Token]: IDENTIFIER x x l8
[Token]: EQUAL = l8
[Token]: NUMBER 2 2 l8
[Token]: SEMICOLON ; l8
[Token]: PRINT print print l9
[Token]: STRING "inner x = 2: " inner x = 2:  l9
[Token]: PLUS + l9
[Token]: IDENTIFIER x x l9
[Token]: SEMICOLON ; l9
[Token]: RIGHT_BRACE } l10
[Token]: PRINT print print l11
[Token]: STRING "outer x should be 1: " outer x should be 1:  l11
[Token]: PLUS + l11
[Token]: IDENTIFIER x x l11
[Token]: SEMICOLON ; l11
[Token]: END_OF_FILE  l13
Program:
{VAR Stmt 'x' = 0.000000}
{BLOCK Stmt
{EXPRESSION Stmt (assignment 'x' = 1.000000)}
}
{PRINT Stmt (PLUS '+' x should be 1:  (variable 'x'))}
{BLOCK Stmt
{VAR Stmt 'x' = 2.000000}
{PRINT Stmt (PLUS '+' inner x = 2:  (variable 'x'))}
}
{PRINT Stmt (PLUS '+' outer x should be 1:  (variable 'x'))}
------
x should be 1: 1.000000
inner x = 2: 2.000000
outer x should be 1: 1.000000
