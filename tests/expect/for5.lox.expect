[Token]: FOR for for l1
[Token]: LEFT_PAREN ( l1
[Token]: VAR var var l1
[Token]: IDENTIFIER j j l1
[Token]: EQUAL = l1
[Token]: NUMBER 0 0 l1
[Token]: SEMICOLON ; l1
[Token]: IDENTIFIER j j l1
[Token]: LESS < l1
[Token]: NUMBER 2 2 l1
[Token]: SEMICOLON ; l1
[Token]: IDENTIFIER j j l1
[Token]: EQUAL = l1
[Token]: IDENTIFIER j j l1
[Token]: PLUS + l1
[Token]: NUMBER 1 1 l1
[Token]: RIGHT_PAREN ) l1
[Token]: LEFT_BRACE { l1
[Token]: FOR for for l2
[Token]: LEFT_PAREN ( l2
[Token]: VAR var var l2
[Token]: IDENTIFIER i i l2
[Token]: EQUAL = l2
[Token]: NUMBER 0 0 l2
[Token]: SEMICOLON ; l2
[Token]: IDENTIFIER i i l2
[Token]: LESS < l2
[Token]: NUMBER 3 3 l2
[Token]: SEMICOLON ; l2
[Token]: IDENTIFIER i i l2
[Token]: EQUAL = l2
[Token]: IDENTIFIER i i l2
[Token]: PLUS + l2
[Token]: NUMBER 1 1 l2
[Token]: RIGHT_PAREN ) l2
[Token]: LEFT_BRACE { l2
[Token]: PRINT print print l3
[Token]: STRING "[" [ l3
[Token]: PLUS + l3
[Token]: IDENTIFIER i i l3
[Token]: PLUS + l3
[Token]: STRING "][" ][ l3
[Token]: PLUS + l3
[Token]: IDENTIFIER j j l3
[Token]: PLUS + l3
[Token]: STRING "]" ] l3
[Token]: SEMICOLON ; l3
[Token]: RIGHT_BRACE } l4
[Token]: RIGHT_BRACE } l5
[Token]: END_OF_FILE  l7
Program:
{BLOCK Stmt
{VAR Stmt 'j' = 0.000000}
{WHILE Stmt, cond: (LESS '<' (variable 'j') 2.000000)
LOOP: {BLOCK Stmt
{BLOCK Stmt
{BLOCK Stmt
{VAR Stmt 'i' = 0.000000}
{WHILE Stmt, cond: (LESS '<' (variable 'i') 3.000000)
LOOP: {BLOCK Stmt
{BLOCK Stmt
{PRINT Stmt (PLUS '+' (PLUS '+' (PLUS '+' (PLUS '+' [ (variable 'i')) ][) (variable 'j')) ])}
}
{EXPRESSION Stmt (assignment 'i' = (PLUS '+' (variable 'i') 1.000000))}
}
}
}
}
{EXPRESSION Stmt (assignment 'j' = (PLUS '+' (variable 'j') 1.000000))}
}
}
}
------
[0.000000][0.000000]
[1.000000][0.000000]
[2.000000][0.000000]
[0.000000][1.000000]
[1.000000][1.000000]
[2.000000][1.000000]
